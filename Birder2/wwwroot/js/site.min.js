function expand(){$(".panel-collapse").collapse("show")}function collapse(){$(".panel-collapse").collapse("hide")}function fetchImageLinks(n){$.get("/api/ImagesApi/thumbnails?observationId="+n,function(n){var t,i;console.log(n);_.isEmpty(n)||(_.isEmpty(gallery)?gallery=blueimp.Gallery(n,{container:"#blueimp-gallery-carousel",carousel:!0}):(t=_.isEqual(_.sortBy(gallery.list.map(n=>n.split("?")[0])),_.sortBy(n.map(n=>n.split("?")[0]))),t||(i=_.difference(n.map(n=>n.split("?")[0]),gallery.list.map(n=>n.split("?")[0])),gallery.add(i),gallery.next())))})}function fetchImageLinks(n){$.get("/api/ImagesApi/thumbnails?observationId="+n,function(n){var i,t;console.log(n);_.isEmpty(n)?console.log("empty fetched"):_.isEmpty(gallery)?gallery=blueimp.Gallery(n,{container:"#blueimp-gallery-carousel",carousel:!0}):(console.log("currently in gallery:"),console.log(gallery.list),i=_.isEqual(_.sortBy(gallery.list.map(n=>n.split("?")[0])),_.sortBy(n.map(n=>n.split("?")[0]))),i?console.log("images arr are equal"):(console.log("images arr are not equal"),t=_.difference(n.map(n=>n.split("?")[0]),gallery.list.map(n=>n.split("?")[0])),console.log("differene is: "),console.log(t),gallery.add(t),gallery.next()))})}function showError(n){switch(n.code){case n.PERMISSION_DENIED:x.innerHTML="User denied the request for Geolocation.";break;case n.POSITION_UNAVAILABLE:x.innerHTML="Location information is unavailable.";break;case n.TIMEOUT:x.innerHTML="The request to get user location timed out.";break;case n.UNKNOWN_ERROR:x.innerHTML="An unknown error occurred."}}function fetchImageLinks(n){$.get("/api/ImagesApi/thumbnails?observationId="+n,function(n){var t,i;console.log(n);_.isEmpty(n)||(_.isEmpty(gallery)?gallery=blueimp.Gallery(n,{container:"#blueimp-gallery-carousel",carousel:!0}):(t=_.isEqual(_.sortBy(gallery.list.map(n=>n.split("?")[0])),_.sortBy(n.map(n=>n.split("?")[0]))),t||(i=_.difference(n.map(n=>n.split("?")[0]),gallery.list.map(n=>n.split("?")[0])),gallery.add(i),gallery.next())))})}var observedSpeciesMapping,markers,gallery;CreateObservationViewModel=function(n){var t=this;ko.mapping.fromJS(n,observedSpeciesMapping,t);ko.bindingHandlers.selectPicker={init:function(n){$(n).selectpicker("render")}};ko.bindingHandlers.dateTimePicker={init:function(n,t,i){var r=i().dateTimePickerOptions||{};r.format=r.format||"dddd, Do MMMM YYYY, HH:mm";r.ignoreReadonly=!0;r.defaultDate=t()();$(n).datetimepicker(r);ko.utils.registerEventHandler(n,"dp.change",function(n){!0;var i=t();ko.isObservable(i)&&(n.date===null||n.date instanceof Date?i(n.date):i(n.date.toDate()))});ko.utils.domNodeDisposal.addDisposeCallback(n,function(){var t=$(n).data("DateTimePicker");t&&t.destroy()})},update:function(n,t){var r=$(n).data("DateTimePicker"),i;r&&(i=ko.utils.unwrapObservable(t()),i=typeof i!="object"?new Date(parseFloat(i.replace(/[^0-9]/g,""))):i,r.date(i))}};t.addObservedSpecies=function(){var n=new ObservedSpeciesViewModel({Id:0,BirdId:0,Quantity:1});t.ObservedSpecies.push(n)};t.removeObservedSpecies=function(){t.ObservedSpecies().length>1&&t.ObservedSpecies.pop()};t.disableSubmitButton=ko.observable(!1);t.Total=ko.computed(function(){return 0+t.ObservedSpecies().length});t.post=function(){if(t.disableSubmitButton(!0),t.ObservedSpecies().length<1){alert("You must choose at least one observed bird species");t.MessageToClient("You must choose at least one observed bird species...");t.disableSubmitButton(!1);return}$.ajax({url:"/Observation/Post/",type:"POST",data:ko.toJSON(t),headers:{"content-type":"application/json; charset=utf-8"},success:function(n){var i=JSON.parse(n);i.IsModelStateValid===!1?t.MessageToClient(i.MessageToClient):window.location.replace("./Index/")},error:function(n){t.disableSubmitButton(!1);n.status===400?$("#MessageToClient").text(n.responseText):$("#MessageToClient").text("The web server had an error.  The issue has been logged for investigation by the developer.")}})}};observedSpeciesMapping={ObservedSpecies:{key:function(n){return ko.utils.unwrapObservable(n.Id)},create:function(n){return new CreateObservationViewModel(n.data)}}};ObservedSpeciesViewModel=function(n){var t=this;ko.mapping.fromJS(n,observedSpeciesMapping,t)};$("#form").validate({submitHandler:function(){createObservationViewModel.post()},rules:{Quantity:{required:!0,digits:!0,min:1},"Observation.BirdId":{required:!0},"Observation.ObservationDateTime":{date:!0}},messages:{"Observation.BirdId":{required:"You must choose a bird species."},Quantity:{required:"Quantity must be digits only",digitsonly:"k"}},tooltip_options:{Quantity:{placement:"bottom"}}});$.validator.addMethod("alphaonly",function(n){return/^[A-Za-z]+$/.test(n)});markers=[];window.onload=function(){function i(t){var i=new google.maps.Marker({position:t,map:n});n.panTo(t);o();markers.push(i);s()}function u(n){for(var t=0;t<markers.length;t++)markers[t].setMap(n)}function e(){u(null)}function o(){e();markers=[]}function s(){createObservationViewModel.Observation.LocationLatitude(markers[0].position.lat());createObservationViewModel.Observation.LocationLongitude(markers[0].position.lng())}var r=new google.maps.LatLng(createObservationViewModel.DefaultLatitude(),createObservationViewModel.DefaultLongitude()),f={zoom:10,center:r},n=new google.maps.Map(document.getElementById("map"),f),t=new google.maps.Geocoder;google.maps.event.addListenerOnce(n,"idle",function(){t.geocode({latLng:r},function(n,t){t==google.maps.GeocoderStatus.OK&&n[0]&&(document.getElementById("set").value=n[0].formatted_address,i(n[0].geometry.location))})});document.getElementById("submit").addEventListener("click",function(){var n=document.getElementById("address").value;t.geocode({address:n},function(n,t){t==google.maps.GeocoderStatus.OK&&n[0]&&(document.getElementById("set").value=n[0].formatted_address,i(n[0].geometry.location))})});google.maps.event.addListener(n,"click",function(n){t.geocode({latLng:n.latLng},function(t,r){r==google.maps.GeocoderStatus.OK&&t[0]&&(document.getElementById("set").value=t[0].formatted_address,i(n.latLng))})})};CreateObservationViewModel=function(n){var t=this;ko.mapping.fromJS(n,{},t);ko.bindingHandlers.selectPicker={init:function(n){$(n).selectpicker("render")}};ko.bindingHandlers.dateTimePicker={init:function(n,t,i){var r=i().dateTimePickerOptions||{};r.format=r.format||"dddd, Do MMMM YYYY, HH:mm";r.ignoreReadonly=!0;r.defaultDate=t()();$(n).datetimepicker(r);ko.utils.registerEventHandler(n,"dp.change",function(n){!0;var i=t();ko.isObservable(i)&&(n.date===null||n.date instanceof Date?i(n.date):i(n.date.toDate()))});ko.utils.domNodeDisposal.addDisposeCallback(n,function(){var t=$(n).data("DateTimePicker");t&&t.destroy()})},update:function(n,t){var r=$(n).data("DateTimePicker"),i;r&&(i=ko.utils.unwrapObservable(t()),i=typeof i!="object"?new Date(parseFloat(i.replace(/[^0-9]/g,""))):i,r.date(i))}};t.disableSubmitButton=ko.observable(!1);t.post=function(){t.disableSubmitButton(!0);$.ajax({url:"/Observation/CreateSingle/",type:"POST",data:ko.toJSON(t),headers:{"content-type":"application/json; charset=utf-8"},success:function(n){var i=JSON.parse(n);i.IsModelStateValid===!1?t.MessageToClient(i.MessageToClient):window.location.replace("./Index/")},error:function(n){t.disableSubmitButton(!1);n.status===400?$("#MessageToClient").text(n.responseText):$("#MessageToClient").text("The web server had an error.  The issue has been logged for investigation by the developer.")}})}};$("#form").validate({submitHandler:function(){createObservationViewModel.post()},rules:{"Observation.Quantity":{required:!0,digits:!0,min:1},"Observation.BirdId":{required:!0},"Observation.ObservationDateTime":{date:!0}},messages:{"Observation.BirdId":{required:"You must choose a bird species."},Quantity:{required:"Quantity must be digits only",digitsonly:"k"}},tooltip_options:{Quantity:{placement:"bottom"}}});$.validator.addMethod("alphaonly",function(n){return/^[A-Za-z]+$/.test(n)});markers=[];window.onload=function(){function i(t){var i=new google.maps.Marker({position:t,map:n});n.panTo(t);o();markers.push(i);s()}function u(n){for(var t=0;t<markers.length;t++)markers[t].setMap(n)}function e(){u(null)}function o(){e();markers=[]}function s(){createObservationViewModel.Observation.LocationLatitude(markers[0].position.lat());createObservationViewModel.Observation.LocationLongitude(markers[0].position.lng())}var r=new google.maps.LatLng(createObservationViewModel.DefaultLatitude(),createObservationViewModel.DefaultLongitude()),f={zoom:10,center:r},n=new google.maps.Map(document.getElementById("map"),f),t=new google.maps.Geocoder;google.maps.event.addListenerOnce(n,"idle",function(){t.geocode({latLng:r},function(n,t){t==google.maps.GeocoderStatus.OK&&n[0]&&(document.getElementById("set").value=n[0].formatted_address,i(n[0].geometry.location))})});document.getElementById("submit").addEventListener("click",function(){var n=document.getElementById("address").value;t.geocode({address:n},function(n,t){t==google.maps.GeocoderStatus.OK&&n[0]&&(document.getElementById("set").value=n[0].formatted_address,i(n[0].geometry.location))})});google.maps.event.addListener(n,"click",function(n){t.geocode({latLng:n.latLng},function(t,r){r==google.maps.GeocoderStatus.OK&&t[0]&&(document.getElementById("set").value=t[0].formatted_address,i(n.latLng))})})};Dropzone.options.imageUpload={paramName:"files",dictDefaultMessage:"Drop photographs here or Click here to upload...",addRemoveLinks:!0,init:function(){myDropzone=this;myDropzone.on("success",function(n,t){myDropzone.removeFile(n);fetchImageLinks(t)})}};EditObservationViewModel=function(n){var t=this;ko.mapping.fromJS(n,{},t);t.RecordDates=ko.pureComputed(function(){return"Observation created: "+moment(t.Observation.CreationDate()).format("DD/MM/YYYY HH:mm")+"; last update: "+moment(t.Observation.LastUpdateDate()).format("DD/MM/YYYY HH:mm")});t.Title=ko.pureComputed(function(){return"<h1>"+t.Observation.Bird.EnglishName()+"<small><i> "+t.Observation.Bird.Species()+"<\/i><\/small><\/h1>"});t.SubTitle=ko.pureComputed(function(){var n=t.Quantity>1?"individuals":"individual";return"<h4>You spotted <b>"+t.Observation.Quantity()+"<\/b> "+n+" on "+moment(t.Observation.ObservationDateTime()).format("dddd, Do MMMM YYYY, HH:mm")+"<\/h4>"});t.disableSubmitButton=ko.observable(!1);ko.bindingHandlers.selectPicker={init:function(n){$(n).selectpicker("render")}};ko.bindingHandlers.dateTimePicker={init:function(n,t,i){var r=i().dateTimePickerOptions||{};r.format=r.format||"dddd, Do MMMM YYYY, HH:mm";r.ignoreReadonly=!0;r.defaultDate=t()();$(n).datetimepicker(r);ko.utils.registerEventHandler(n,"dp.change",function(n){!0;var i=t();ko.isObservable(i)&&(n.date===null||n.date instanceof Date?i(n.date):i(n.date.toDate()))});ko.utils.domNodeDisposal.addDisposeCallback(n,function(){var t=$(n).data("DateTimePicker");t&&t.destroy()})},update:function(n,t){var r=$(n).data("DateTimePicker"),i;r&&(i=ko.utils.unwrapObservable(t()),i=typeof i!="object"?new Date(parseFloat(i.replace(/[^0-9]/g,""))):i,r.date(i))}};t.post=function(){t.disableSubmitButton(!0);console.log(t);$.ajax({url:"/Observation/Edit/",type:"POST",data:ko.toJSON(t),headers:{"content-type":"application/json; charset=utf-8"},success:function(n){var i=JSON.parse(n);i.IsModelStateValid===!1?t.MessageToClient(i.MessageToClient):window.location.href="/Observation/Details/"+i.Observation.ObservationId},error:function(n){t.disableSubmitButton(!1);n.status===400?$("#MessageToClient").text(n.responseText):$("#MessageToClient").text("The web server had an error.  The issue has been logged for investigation by the developer.")}})}};$("#form").validate({submitHandler:function(){editObservationViewModel.post()},rules:{Quantity:{required:!0,digits:!0,min:1},"Observation.BirdId":{required:!0},"Observation.ObservationDateTime":{date:!0}},messages:{"Observation.BirdId":{required:"You must choose a bird species."},Quantity:{required:"Quantity must be digits only",digitsonly:"k"}},tooltip_options:{Quantity:{placement:"bottom"}}});$.validator.addMethod("alphaonly",function(n){return/^[A-Za-z]+$/.test(n)});markers=[];window.onload=function(){function i(t){var i=new google.maps.Marker({position:t,map:n});n.panTo(t);o();markers.push(i);s()}function u(n){for(var t=0;t<markers.length;t++)markers[t].setMap(n)}function e(){u(null)}function o(){e();markers=[]}function s(){editObservationViewModel.Observation.LocationLatitude(markers[0].position.lat());editObservationViewModel.Observation.LocationLongitude(markers[0].position.lng())}fetchImageLinks(editObservationViewModel.Observation.ObservationId());var r=new google.maps.LatLng(editObservationViewModel.Observation.LocationLatitude(),editObservationViewModel.Observation.LocationLongitude()),f={zoom:13,center:r},n=new google.maps.Map(document.getElementById("map"),f),t=new google.maps.Geocoder;google.maps.event.addListenerOnce(n,"idle",function(){t.geocode({latLng:r},function(n,t){t==google.maps.GeocoderStatus.OK&&n[0]&&(document.getElementById("set").value=n[0].formatted_address,i(n[0].geometry.location))})});document.getElementById("submit").addEventListener("click",function(){var n=document.getElementById("address").value;t.geocode({address:n},function(n,t){t==google.maps.GeocoderStatus.OK&&n[0]&&(document.getElementById("set").value=n[0].formatted_address,i(n[0].geometry.location))})});google.maps.event.addListener(n,"click",function(n){t.geocode({latLng:n.latLng},function(t,r){r==google.maps.GeocoderStatus.OK&&t[0]&&(document.getElementById("set").value=t[0].formatted_address,i(n.latLng))})})};ImagesViewModel=function(n){var t=this;ko.mapping.fromJS(n,{},t)};ManageNetworkViewModel=function(n){var t=this;ko.mapping.fromJS(n,{},t);t.FollowingCount=ko.observable(t.FollowingList().length);t.FollowersCount=ko.observable(t.FollowersList().length);t.unFollow=function(n,i){i.target.innerText==="Unfollow"?$.ajax({url:"/Network/UnFollow/",type:"POST",data:ko.toJSON(n),headers:{"content-type":"application/json; charset=utf-8"},success:function(n){var r=JSON.parse(n);t.StatusMessage("You have unfollowed "+r.UserName);i.target.innerText="Follow"},error:function(n){t.StatusMessage("An error occurred");n.status===400?$("#StatusMessage").text(n.responseText):$("#StatusMessage").text("The web server had an error.  The issue has been logged for investigation by the developer.")}}):$.ajax({url:"/Network/Follow/",type:"POST",data:ko.toJSON(n),headers:{"content-type":"application/json; charset=utf-8"},success:function(n){var r=JSON.parse(n);t.StatusMessage("You are now following "+r.UserName);i.target.innerText="Unfollow"},error:function(n){t.StatusMessage("An error occurred");n.status===400?(alert(n.responseText),$("#StatusMessage").text(n.responseText)):$("#StatusMessage").text("The web server had an error.  The issue has been logged for investigation by the developer.")}})}};ObservationDetailsViewModel=function(n){var t=this;ko.mapping.fromJS(n,{},t);t.RecordDates=ko.pureComputed(function(){return"Observation created: "+moment(t.SelectedObservation.CreationDate()).format("DD/MM/YYYY HH:mm")+"; last update: "+moment(t.SelectedObservation.LastUpdateDate()).format("DD/MM/YYYY HH:mm")});t.Title=ko.pureComputed(function(){return"<h1>"+t.SelectedObservation.Bird.EnglishName()+"<small><i> "+t.SelectedObservation.Bird.Species()+"<\/i><\/small><\/h1>"});t.SubTitle=ko.pureComputed(function(){var n=t.SelectedObservation.Quantity>1?"were":"was";return"<h4><b>"+t.SelectedObservation.Quantity()+"<\/b> "+n+" spotted by <a asp-controller='User' asp-action='Details'>You<\/a> on "+moment(t.SelectedObservation.ObservationDateTime()).format("dddd, Do MMMM YYYY, HH:mm")+"<\/h4>"})};window.onload=function(){fetchImageLinks(observationDetailsViewModel.SelectedObservation.ObservationId());observationDetailsViewModel.SelectedObservation.HasPhotos()===!1&&$("#collapse1").collapse("hide");var n={lat:observationDetailsViewModel.SelectedObservation.LocationLatitude(),lng:observationDetailsViewModel.SelectedObservation.LocationLongitude()},t=new google.maps.Map(document.getElementById("map"),{zoom:7,center:n}),r=new google.maps.InfoWindow({content:'<div id="content"><div id="siteNotice"><\/div><h4 id="firstHeading" class="firstHeading">@Model.Bird.EnglishName<\/h4><div id="bodyContent"><p><b>Uluru<\/b>, also referred to as <b>Ayers Rock<\/b><\/div><\/div>'}),i=new google.maps.Marker({position:n,map:t});i.addListener("click",function(){r.open(t,i)})};