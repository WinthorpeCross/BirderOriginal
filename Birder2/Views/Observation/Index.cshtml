@model ObservationsIndexViewModel

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">Your Observations Feed</h3>
    </div>

    <div class="panel-body">
        <form class="form-horizontal">
            <div class="form-group">
                <div class="col-sm-6">
                    @*<a asp-action="CreateSingle" class="btn btn-default btn-success">Add Observation</a>*@
                    <!-- Single button -->
                    <div class="btn-group">
                        <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Add Observation  <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            <li><a asp-action="CreateSingle">Add single observation</a></li>
                            <li><a asp-action="Create">Add multiple observations</a></li>
                            @*<li><a href="#">Something else here</a></li>
                            <li role="separator" class="divider"></li>
                            <li><a href="#">Separated link</a></li>*@
                        </ul>
                    </div>
                </div>
                <div class="col-sm-6">
                    <select asp-for="Filter" asp-items="Html.GetEnumSelectList<ObservationsFeedFilter>()" class="form-control selectpicker show-tick" onchange="this.form.submit()"></select>
                </div>
            </div>
        </form>

        @{ if (Model.IsEmptyList == true && Model.Observations.CurrentPage == 1)
            {

            <div class="alert alert-success" role="alert">
                <h4 class="alert-heading">Welcome to Birder!</h4>
                <p><b>This is your observations feed.</b>  Your observations, and those from your network of <i>Birders</i>, will be shown here.  <b>While this feed is empty, we'll show the latest public observations here...</b></p>
            </div>

            }
        }

    </div>
</div>

@{
    @foreach (var observation in Model.Observations.Results)
    {
        <div class="container">
            @Html.Partial("_Observations", observation)
        </div>
    }
}

<br />

@(await Component.InvokeAsync<PagerViewComponent>(Model.Observations))

@{
    ViewData["Title"] = "Your Observations Feed";
}
