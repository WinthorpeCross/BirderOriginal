@model Birder2.ViewModels.EditObservationViewModel
@using Newtonsoft.Json
@{
    string data = JsonConvert.SerializeObject(Model,
        new JsonSerializerSettings()
        {
            ReferenceLoopHandling = ReferenceLoopHandling.Ignore
        });
}

@section Scripts {
    <script src="~/js/knockout-3.4.2.js"></script>
    <script src="~/js/knockout.mapping-latest.js"></script>
    <script src="~/js/jqueryvalidate.js"></script>
    <script src="~/js/jquery-validate.bootstrap-tooltip.js"></script>
    <script src="~/js/editObservationViewModel.js"></script>
    <script type="text/javascript">
        var editObservationViewModel = new EditObservationViewModel(@Html.Raw(data));
        ko.applyBindings(editObservationViewModel);
    </script>
}

<div data-bind="html: Title()"></div>
<div data-bind="html: SubTitle()"></div>

<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div>
                <div class="row">
                    <div class="col-sm-4">
                    </div>
                    <div class="col-sm-8">
                        <button class="btn btn-link" type="button" onclick="expand()" style="float: right;">Expand All</button>
                        <button class="btn btn-link" type="button" onclick="collapse()" style="float: right;">Collapse All</button>
                    </div>
                </div>
                <di class="panel-group" id="accordion">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapse0"><b>General</b></a>
                            </h4>
                        </div>
                        <div id="collapse0" class="panel-collapse collapse in">
                            <div class="panel-body">
                                <div class="form-group">
                                    <label class="control-label" for="Observation.ObservationDateTime">Date:</label>
                                    <div class='input-group date' data-bind="dateTimePicker: Observation.ObservationDateTime">
                                        <input type='text' class="form-control" readonly />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label" for="Observation.Quantity">Quantity:</label>
                                    <input class="form-control" name="Observation.Quantity" data-bind="value: Observation.Quantity" />
                                </div>
                                <div class="form-group">
                                    <label class="control-label" for="Observation.BirdId">Species:</label>
                                    @Html.DropDownListFor(m => m.Observation.BirdId,
                                      new SelectList(Model.Birds, "BirdId", "EnglishName"),
                                          new
                                          {
                                              @name = "BirdId",
                                              @class = "form-control selectpicker showtick",
                                              data_bind = "value: Observation.BirdId",
                                              title = "Choose a bird species...",
                                              data_live_search = "true",
                                              data_show_subtext = "true"
                                          })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapse1"><b>@Html.DisplayNameFor(model => model.Observation.NoteGeneral)</b></a>
                            </h4>
                        </div>
                        <div id="collapse1" class="panel-collapse collapse">
                            <div class="panel-body">
                                <input class="form-control" name="Observation.NoteGeneral" data-bind="value: Observation.NoteGeneral" />
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" @*data-parent="#accordion" *@ href="#collapse2"><b>@Html.DisplayNameFor(model => model.Observation.NoteHabitat)</b></a>
                            </h4>
                        </div>
                        <div id="collapse2" class="panel-collapse collapse">
                            <div class="panel-body">
                                <input class="form-control" name="Observation.NoteHabitat" data-bind="value: Observation.NoteHabitat" />
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" @*data-parent="#accordion" *@ href="#collapse3"><b>@Html.DisplayNameFor(model => model.Observation.NoteWeather)</b></a>
                            </h4>
                        </div>
                        <div id="collapse3" class="panel-collapse collapse">
                            <div class="panel-body">
                                <input class="form-control" name="Observation.NoteWeather" data-bind="value: Observation.NoteWeather" />
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" @*data-parent="#accordion" *@ href="#collapse4"><b>@Html.DisplayNameFor(model => model.Observation.NoteAppearance)</b></a>
                            </h4>
                        </div>
                        <div id="collapse4" class="panel-collapse collapse">
                            <div class="panel-body">
                                <input class="form-control" name="Observation.NoteAppearance" data-bind="value: Observation.NoteAppearance" />
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" @*data-parent="#accordion" *@ href="#collapse5"><b>@Html.DisplayNameFor(model => model.Observation.NoteBehaviour)</b></a>
                            </h4>
                        </div>
                        <div id="collapse5" class="panel-collapse collapse">
                            <div class="panel-body">
                                <input class="form-control" name="Observation.NoteBehaviour" data-bind="value: Observation.NoteBehaviour" />
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" @*data-parent="#accordion" *@ href="#collapse6"><b>@Html.DisplayNameFor(model => model.Observation.NoteVocalisation)</b></a>
                            </h4>
                        </div>
                        <div id="collapse6" class="panel-collapse collapse">
                            <div class="panel-body">
                                <input class="form-control" name="Observation.NoteVocalisation" data-bind="value: Observation.NoteVocalisation" />
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" @*data-parent="#accordion" *@ href="#collapse7"><b>Location</b></a>
                            </h4>
                        </div>
                        <div id="collapse7" class="panel-collapse collapse in">
                            <div class="panel-body">
                                <div class="form-group">
                                    <label class="control-label">Observation location (use the map control to set the location):</label>
                                    <input class="form-control" id="set" disabled />
                                    <div class="container" id="floating-panel">
                                        <input id="address" type="text" value="">
                                        <input id="submit" type="button" value="Search">
                                    </div>
                                </div>
                                <div id="map" class="class--map"></div>
                            </div>
                        </div>
                    </div>
            </div>
            <div class="container col-lg-12">
                <div class="form-group"></div>
                <p><button class="btn btn-primary btn-block" type="submit" data-bind="disable:disableSubmitButton">Save Changes to Observation</button></p>
                <a asp-action="Index" class="btn btn-link">   Back to Observations feed</a>
            </div>
        </form>
        <small data-bind="text: RecordDates"></small>
    </div>
</div>

<script>
    function expand() {
        $('.panel-collapse').collapse('show');
    }
    function collapse() {
        $('.panel-collapse').collapse('hide');
    }

    var markers = [];

    function initMap() {
        var myLatlng = new google.maps.LatLng(editObservationViewModel.Observation.LocationLatitude(), editObservationViewModel.Observation.LocationLongitude());
        var myOptions = {
            zoom: 13,
            center: myLatlng,
        }

        var map = new google.maps.Map(document.getElementById("map"), myOptions);
        var geocoder = new google.maps.Geocoder();

        //google.maps.event.addListenerOnce(map, 'idle', addMarker(myLatlng));
        google.maps.event.addListenerOnce(map, 'idle', function (event) {
            geocoder.geocode({
                'latLng': myLatlng
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        //alert(results[0].formatted_address);
                        document.getElementById('set').value = results[0].formatted_address
                        addMarker(results[0].geometry.location);
                    }
                }
            });
        });

        document.getElementById('submit').addEventListener('click', function (event) {
            var address = document.getElementById('address').value;
            geocoder.geocode({
                'address': address
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        //alert(results[0].formatted_address);
                        document.getElementById('set').value = results[0].formatted_address
                        addMarker(results[0].geometry.location);
                    }
                }
            });
        });

        google.maps.event.addListener(map, 'click', function (event) {
            geocoder.geocode({
                'latLng': event.latLng
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        //alert(results[0].formatted_address);
                        document.getElementById('set').value = results[0].formatted_address
                        addMarker(event.latLng);
                    }
                }
            });
        });

        function addMarker(location) {
            var marker = new google.maps.Marker({
                position: location,
                map: map,
            });

            map.panTo(location);
            deleteMarkers();
            markers.push(marker);
            updateForm();
        }

        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setMapOnAll(null);
        }

        // Shows any markers currently in the array.
        function showMarkers() {
            setMapOnAll(map);
        }

        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }
        function updateForm() {
            editObservationViewModel.Observation.LocationLatitude(markers[0].position.lat());
            editObservationViewModel.Observation.LocationLongitude(markers[0].position.lng());
            //document.getElementById('latitude').value = markers[0].position.lat();
            //document.getElementById('longitude').value = markers[0].position.lng();
        }
    }
</script>
